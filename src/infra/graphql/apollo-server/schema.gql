# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AcceptTeamPlayerInviteInput {
  teamPlayerInviteId: String!
}

type AccessTokenModel {
  accessToken: String!
}

input AuthenticateInput {
  email: String!
  password: String!
}

input CreatePlayerInput {
  email: String!
  password: String!
  riotId: String!
}

input CreateTeamInput {
  name: String!
}

input CreateTeamPlayerInviteInput {
  playerId: String!
  teamId: String!
}

input CreateTournamentInput {
  description: String
  endDate: DateTimeISO
  maxTeams: Float
  minTeams: Float
  name: String!
  rules: String
  startDate: DateTimeISO
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type Mutation {
  acceptInvite(data: AcceptTeamPlayerInviteInput!): TeamPlayerInviteModel!
  createInvite(data: CreateTeamPlayerInviteInput!): TeamPlayerInviteModel!
  createPlayer(data: CreatePlayerInput!): PlayerModel!
  createTeam(data: CreateTeamInput!): TeamModel!
  createTournament(data: CreateTournamentInput!): TournamentModel!
  rejectInvite(data: RejectTeamPlayerInviteInput!): TeamPlayerInviteModel!
}

type PlayerModel {
  createdAt: DateTimeISO!
  email: String!
  id: String!
  ownedTeams: [TeamModel!]!
  riotId: String!
}

type Query {
  auth(data: AuthenticateInput!): AccessTokenModel!
  player: [PlayerModel!]!
  team: [TeamModel!]!
  teamInvites: [TeamPlayerInviteModel!]!
  tournament: [TournamentModel!]!
}

input RejectTeamPlayerInviteInput {
  teamPlayerInviteId: String!
}

type TeamModel {
  createdAt: DateTimeISO!
  id: String!
  name: String!
}

type TeamPlayerInviteModel {
  acceptedAt: DateTimeISO
  id: String!
  invitedAt: DateTimeISO!
  invitedBy: String!
  playerId: String!
  rejectedAt: DateTimeISO
  teamId: String!
}

type TournamentModel {
  createdAt: String!
  createdBy: String!
  description: String
  endDate: DateTimeISO
  id: String!
  maxTeams: Float
  minTeams: Float
  name: String!
  rules: String
  startDate: DateTimeISO
  status: String!
  winnerTeamId: String
}